{"version":3,"sources":["redux/usersSlice.js","redux/selectedUsersSlice.js","components/user.js","components/users-sections.js","components/months.js","App.js","redux/store.js","index.js"],"names":["getUsersData","createAsyncThunk","a","fetch","response","ok","json","cardData","usersDataSlice","createSlice","name","initialState","extraReducers","fulfilled","state","action","length","push","payload","actions","setUsersData","selectedUsersDataSlice","reducers","addUser","user","localStorage","setItem","JSON","stringify","removeUser","index","findIndex","id","splice","retrieveStorage","storage","parse","getItem","forEach","item","User","selectedUsers","useSelector","headerClassName","Boolean","find","selectedUser","checked","useState","inputValue","setInputValue","disptach","useDispatch","setStatus","event","target","firstName","className","lastName","type","value","onChange","htmlFor","UsersSection","letter","users","sortedUsers","sort","b","localeCompare","filter","toLowerCase","map","Months","month","filteredByMonth","Date","dob","toLocaleString","formatBday","date","getDate","getFullYear","App","alphabet","Array","from","e","i","x","String","fromCharCode","dispatch","useEffect","console","log","basename","exact","path","to","configureStore","reducer","usersReducer","selectedUsersReduer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.5dfca413.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nexport const getUsersData = createAsyncThunk(\r\n  \"users/getUserData\",\r\n  async () => {\r\n    const response = await fetch(\"https://yalantis-react-school-api.yalantis.com/api/task0/users\");\r\n    if (response.ok) {\r\n      const cardData = await response.json();\r\n      return { cardData };\r\n    }\r\n  }\r\n);\r\n\r\nexport const usersDataSlice = createSlice({\r\n  name: \"set-user-data\",\r\n  initialState: [],\r\n  extraReducers: {\r\n    [getUsersData.fulfilled]: (state, action) => {\r\n      if(state.length < 1) {\r\n        state.push(action.payload.cardData);\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setUsersData } =\r\nusersDataSlice.actions;\r\n\r\nexport default usersDataSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const selectedUsersDataSlice = createSlice({\r\n  name: \"select-user\",\r\n  initialState: [],\r\n  reducers: {\r\n    addUser(state, action) {\r\n        state.push(action.payload.user);\r\n        localStorage.setItem(\"savedSelectedUsers\", JSON.stringify(state));     \r\n    },\r\n    removeUser(state, action) {\r\n        const index = state.findIndex(user => user.id === action.payload.user.id);\r\n        state.splice(index, 1);\r\n        localStorage.setItem(\"savedSelectedUsers\", JSON.stringify(state));\r\n    },\r\n    retrieveStorage(state, action) {\r\n      const storage = JSON.parse(localStorage.getItem(\"savedSelectedUsers\"))\r\n      if (storage) {\r\n        storage.forEach(item => state.splice(0, 0, item));\r\n      }\r\n      localStorage.setItem(\"savedSelectedUsers\", JSON.stringify(state));\r\n    }\r\n  }\r\n});\r\n\r\nexport const { addUser, removeUser, retrieveStorage } =\r\nselectedUsersDataSlice.actions;\r\n\r\nexport default selectedUsersDataSlice.reducer;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { addUser, removeUser } from \"../redux/selectedUsersSlice\";\r\nimport { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction User({ user }) {\r\n  const selectedUsers = useSelector((state) => state.selectedUsers);\r\n  const headerClassName = Boolean(\r\n    selectedUsers.find((selectedUser) => selectedUser.id === user.id)\r\n  )\r\n    ? \"users-list__name-active\"\r\n    : \"\";\r\n  const checked = Boolean(\r\n    selectedUsers.find((selectedUser) => selectedUser.id === user.id)\r\n  )\r\n    ? false\r\n    : true;\r\n  const [inputValue, setInputValue] = useState(false);\r\n  const disptach = useDispatch();\r\n\r\n  function setStatus(event) {\r\n    if (event.target.id === `${user.firstName}-not-active`) {\r\n      disptach(\r\n        removeUser({\r\n          user: user,\r\n        })\r\n      );\r\n    } else {\r\n      disptach(\r\n        addUser({\r\n          user: user,\r\n        })\r\n      );\r\n    }\r\n    setInputValue(!inputValue);\r\n  }\r\n\r\n  return (\r\n    <div className=\"users-list__user-wrapper\">\r\n      <div\r\n        className={headerClassName}\r\n      >{`${user.firstName} ${user.lastName}`}</div>\r\n      <div className=\"users-list__button-container\">\r\n        <div className=\"users-list__checkbox\">\r\n          <input\r\n            className=\"users-checkbox\"\r\n            type=\"radio\"\r\n            id={`${user.firstName}-not-active`}\r\n            value={inputValue}\r\n            name={user.id}\r\n            onChange={setStatus}\r\n            checked={checked}\r\n          ></input>\r\n          <label\r\n            className=\"users-checkbox\"\r\n            htmlFor={`${user.firstName}-not-active`}\r\n          >\r\n            Not Active\r\n          </label>\r\n        </div>\r\n        <div className=\"users-list__checkbox\">\r\n          <input\r\n            className=\"users-checkbox\"\r\n            type=\"radio\"\r\n            id={`${user.firstName}-active`}\r\n            value={!inputValue}\r\n            name={user.id}\r\n            onChange={setStatus}\r\n            checked={!checked}\r\n          ></input>\r\n          <label\r\n            className=\"users-checkbox\"\r\n            htmlFor={`${user.firstName}-active`}\r\n          >\r\n            Active\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","import { useSelector } from \"react-redux\";\r\nimport User from \"./user\";\r\n\r\nfunction UsersSection({ letter }) {\r\n  const users = useSelector((state) => state.users);\r\n  const sortedUsers = JSON.parse(JSON.stringify(users))[0]\r\n    .sort(function (a, b) {\r\n      return a.firstName.localeCompare(b.firstName);\r\n    })\r\n    .filter((user) => user.firstName[0].toLowerCase() === letter.toLowerCase());\r\n\r\n  return (\r\n    <div className=\"users-list__letter-section\">\r\n      <div className=\"users-list-letter-marker\">{letter}</div>\r\n      {sortedUsers.length === 0 ? (\r\n        <div>No employees</div>\r\n      ) : (\r\n        <div>\r\n          {sortedUsers.map((user) => (\r\n            <User key={user.id} user={user} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UsersSection;\r\n","function Months({ month, users }) {\r\n  const filteredByMonth = users.filter(\r\n    (user) =>\r\n      new Date(user.dob).toLocaleString(\"en-EN\", { month: \"long\" }) === month\r\n  );\r\n\r\n  function formatBday(user) {\r\n    if (user) {\r\n      const date = new Date(user);\r\n      const month = date.toLocaleString(\"en-EN\", { month: \"long\" });\r\n      return `${date.getDate()} ${month} ${date.getFullYear()}`;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"users-list__month-header\">{month}</div>\r\n      {filteredByMonth.length > 0 ? (\r\n        filteredByMonth.map((user) => (\r\n          <div className=\"users-list__selected-user\" key={user.id}>\r\n            {`${user.firstName} ${user.lastName}`} {formatBday(user.dob)}\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <div className=\"users-list__no-b-days-msg\">No Employees</div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Months;\r\n","import {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { getUsersData } from \"./redux/usersSlice\";\nimport { retrieveStorage } from \"./redux/selectedUsersSlice\";\nimport UsersSection from \"./components/users-sections\";\nimport Months from \"./components/months\";\n\nfunction App() {\n  const users = useSelector((state) => state.users);\n  const selectedUsers = JSON.parse(\n    JSON.stringify(useSelector((state) => state.selectedUsers))\n  );\n  selectedUsers.sort(function (a, b) {\n    return a.lastName.localeCompare(b.lastName);\n  });\n\n  const alpha = Array.from(Array(26)).map((e, i) => i + 65);\n  const alphabet = alpha.map((x) => String.fromCharCode(x));\n  const dispatch = useDispatch();\n  const months = [\n    \"November\",\n    \"December\",\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n  ];\n\n  useEffect(() => {\n    dispatch(getUsersData({}));\n    dispatch(retrieveStorage({}));\n  }, [dispatch]);\n\n  console.log(\"1,0,next\");\n\n  return (\n    <div className=\"App\">\n      <Router basename=\"/test-app\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Redirect to=\"/employees\" />\n          </Route>\n          <Route exact path=\"/employees\">\n            <div className=\"users\">\n              <div className=\"users-list\">\n                {users.length !== 0 &&\n                  alphabet.map((letter, index) => (\n                    <UsersSection letter={letter} key={index} />\n                  ))}\n              </div>\n              <div className=\"users-selected-list\">\n                <div className=\"users-selected-list-header\">Birthdays</div>\n                {selectedUsers.length !== 0 ? (\n                  months.map((month, index) => (\n                    <Months month={month} key={index} users={selectedUsers} />\n                  ))\n                ) : (\n                  <div className=\"users-selected-empty\">\n                    Employees List is empty\n                  </div>\n                )}\n              </div>\n            </div>\n          </Route>\n          <Route>\n            <Redirect to=\"/employees\" />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport usersReducer from \"./usersSlice\";\r\nimport selectedUsersReduer from \"./selectedUsersSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    users: usersReducer,\r\n    selectedUsers: selectedUsersReduer\r\n  },\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.scss';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}