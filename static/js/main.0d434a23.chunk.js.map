{"version":3,"sources":["redux/usersSlice.js","redux/selectedUsersSlice.js","components/user.js","components/users-sections.js","components/months.js","components/main-content.js","App.js","redux/store.js","index.js"],"names":["getUsersData","createAsyncThunk","a","fetch","response","ok","json","cardData","usersDataSlice","createSlice","name","initialState","extraReducers","fulfilled","state","action","length","push","payload","actions","setUsersData","selectedUsersDataSlice","reducers","addUser","user","localStorage","setItem","JSON","stringify","removeUser","index","findIndex","id","splice","retrieveStorage","storage","parse","getItem","forEach","item","User","selectedUsers","useSelector","headerClassName","Boolean","find","selectedUser","checked","useState","inputValue","setInputValue","disptach","useDispatch","setStatus","event","target","firstName","className","lastName","type","value","onChange","htmlFor","UsersSection","letter","users","sortedUsers","sort","b","localeCompare","filter","toLowerCase","map","Months","month","filteredByMonth","Date","dob","toLocaleString","formatBday","date","getDate","getFullYear","MainContent","alphabet","months","App","Array","from","e","i","x","String","fromCharCode","dispatch","useEffect","console","log","basename","exact","path","to","configureStore","reducer","usersReducer","selectedUsersReduer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.0d434a23.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const getUsersData = createAsyncThunk(\n  \"users/getUserData\",\n  async () => {\n    const response = await fetch(\"https://yalantis-react-school-api.yalantis.com/api/task0/users\");\n    if (response.ok) {\n      const cardData = await response.json();\n      return { cardData };\n    }\n  }\n);\n\nexport const usersDataSlice = createSlice({\n  name: \"set-user-data\",\n  initialState: [],\n  extraReducers: {\n    [getUsersData.fulfilled]: (state, action) => {\n      if(state.length < 1) {\n        state.push(action.payload.cardData);\n      }\n    },\n  },\n});\n\nexport const { setUsersData } =\nusersDataSlice.actions;\n\nexport default usersDataSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const selectedUsersDataSlice = createSlice({\n  name: \"select-user\",\n  initialState: [],\n  reducers: {\n    addUser(state, action) {\n        state.push(action.payload.user);\n        localStorage.setItem(\"savedSelectedUsers\", JSON.stringify(state));     \n    },\n    removeUser(state, action) {\n        const index = state.findIndex(user => user.id === action.payload.user.id);\n        state.splice(index, 1);\n        localStorage.setItem(\"savedSelectedUsers\", JSON.stringify(state));\n    },\n    retrieveStorage(state, action) {\n      const storage = JSON.parse(localStorage.getItem(\"savedSelectedUsers\"))\n      if (storage) {\n        storage.forEach(item => state.splice(0, 0, item));\n      }\n      localStorage.setItem(\"savedSelectedUsers\", JSON.stringify(state));\n    }\n  }\n});\n\nexport const { addUser, removeUser, retrieveStorage } =\nselectedUsersDataSlice.actions;\n\nexport default selectedUsersDataSlice.reducer;\n","import { useDispatch } from \"react-redux\";\nimport { addUser, removeUser } from \"../redux/selectedUsersSlice\";\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nfunction User({ user }) {\n  const selectedUsers = useSelector((state) => state.selectedUsers);\n  const headerClassName = Boolean(\n    selectedUsers.find((selectedUser) => selectedUser.id === user.id)\n  )\n    ? \"users-list__name-active\"\n    : \"\";\n  const checked = Boolean(\n    selectedUsers.find((selectedUser) => selectedUser.id === user.id)\n  )\n    ? false\n    : true;\n  const [inputValue, setInputValue] = useState(false);\n  const disptach = useDispatch();\n\n  function setStatus(event) {\n    if (event.target.id === `${user.firstName}-not-active`) {\n      disptach(\n        removeUser({\n          user: user,\n        })\n      );\n    } else {\n      disptach(\n        addUser({\n          user: user,\n        })\n      );\n    }\n    setInputValue(!inputValue);\n  }\n\n  return (\n    <div className=\"users-list__user-wrapper\">\n      <div\n        className={headerClassName}\n      >{`${user.firstName} ${user.lastName}`}</div>\n      <div className=\"users-list__button-container\">\n        <div className=\"users-list__checkbox\">\n          <input\n            className=\"users-checkbox\"\n            type=\"radio\"\n            id={`${user.firstName}-not-active`}\n            value={inputValue}\n            name={user.id}\n            onChange={setStatus}\n            checked={checked}\n          ></input>\n          <label\n            className=\"users-checkbox\"\n            htmlFor={`${user.firstName}-not-active`}\n          >\n            Not Active\n          </label>\n        </div>\n        <div className=\"users-list__checkbox\">\n          <input\n            className=\"users-checkbox\"\n            type=\"radio\"\n            id={`${user.firstName}-active`}\n            value={!inputValue}\n            name={user.id}\n            onChange={setStatus}\n            checked={!checked}\n          ></input>\n          <label\n            className=\"users-checkbox\"\n            htmlFor={`${user.firstName}-active`}\n          >\n            Active\n          </label>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default User;\n","import { useSelector } from \"react-redux\";\nimport User from \"./user\";\n\nfunction UsersSection({ letter }) {\n  const users = useSelector((state) => state.users);\n  const sortedUsers = JSON.parse(JSON.stringify(users))[0]\n    .sort(function (a, b) {\n      return a.firstName.localeCompare(b.firstName);\n    })\n    .filter((user) => user.firstName[0].toLowerCase() === letter.toLowerCase());\n\n  return (\n    <div className=\"users-list__letter-section\">\n      <div className=\"users-list-letter-marker\">{letter}</div>\n      {sortedUsers.length === 0 ? (\n        <div>No employees</div>\n      ) : (\n        <div>\n          {sortedUsers.map((user) => (\n            <User key={user.id} user={user} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default UsersSection;\n","function Months({ month, users }) {\n  const filteredByMonth = users.filter(\n    (user) =>\n      new Date(user.dob).toLocaleString(\"en-EN\", { month: \"long\" }) === month\n  );\n\n  function formatBday(user) {\n    if (user) {\n      const date = new Date(user);\n      const month = date.toLocaleString(\"en-EN\", { month: \"long\" });\n      return `${date.getDate()} ${month} ${date.getFullYear()}`;\n    }\n  }\n\n  return (\n    <>\n      <div className=\"users-list__month-header\">{month}</div>\n      {filteredByMonth.length > 0 ? (\n        filteredByMonth.map((user) => (\n          <div className=\"users-list__selected-user\" key={user.id}>\n            {`${user.firstName} ${user.lastName}`} {formatBday(user.dob)}\n          </div>\n        ))\n      ) : (\n        <div className=\"users-list__no-b-days-msg\">No Employees</div>\n      )}\n    </>\n  );\n}\n\nexport default Months;\n","import UsersSection from \"./users-sections\";\nimport Months from \"./months\";\n\nfunction MainContent({ users, alphabet, selectedUsers, months }) {\n  return (\n    <div className=\"users\">\n      <div className=\"users-list\">\n        {users.length !== 0 &&\n          alphabet.map((letter, index) => (\n            <UsersSection letter={letter} key={index} />\n          ))}\n      </div>\n      <div className=\"users-selected-list\">\n        <div className=\"users-selected-list-header\">Birthdays</div>\n        {selectedUsers.length !== 0 ? (\n          months.map((month, index) => (\n            <Months month={month} key={index} users={selectedUsers} />\n          ))\n        ) : (\n          <div className=\"users-selected-empty\">Employees List is empty</div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default MainContent;\n","import {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { getUsersData } from \"./redux/usersSlice\";\nimport { retrieveStorage } from \"./redux/selectedUsersSlice\";\nimport MainContent from \"./components/main-content\";\n\nfunction App() {\n  const users = useSelector((state) => state.users);\n  const selectedUsers = JSON.parse(\n    JSON.stringify(useSelector((state) => state.selectedUsers))\n  );\n  selectedUsers.sort(function (a, b) {\n    return a.lastName.localeCompare(b.lastName);\n  });\n\n  const alpha = Array.from(Array(26)).map((e, i) => i + 65);\n  const alphabet = alpha.map((x) => String.fromCharCode(x));\n  const dispatch = useDispatch();\n  const months = [\n    \"November\",\n    \"December\",\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n  ];\n\n  useEffect(() => {\n    dispatch(getUsersData({}));\n    dispatch(retrieveStorage({}));\n  }, [dispatch]);\n\n  console.log('aaa');\n\n  return (\n    <Router basename=\"/test-app\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Redirect to=\"/employees\" />\n        </Route>\n        <Route exact path=\"/employees\">\n          <MainContent users={users} alphabet={alphabet} selectedUsers={selectedUsers} months={months} />\n        </Route>\n        <Route path=\"*\">\n          <Redirect to=\"/employees\" />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport usersReducer from \"./usersSlice\";\nimport selectedUsersReduer from \"./selectedUsersSlice\";\n\nexport default configureStore({\n  reducer: {\n    users: usersReducer,\n    selectedUsers: selectedUsersReduer\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.scss';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}